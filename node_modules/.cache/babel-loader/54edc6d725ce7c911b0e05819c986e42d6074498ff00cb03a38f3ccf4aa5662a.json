{"ast":null,"code":"import _objectSpread from\"c:/Users/Evan/Desktop/LearnCode/on-button/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";const App=()=>{const[isOn,setIsOn]=useState(false);// Function to toggle the button's state\nconst toggleButton=()=>{console.log(\"Button clicked. Toggling state. Current state: \".concat(isOn?\"ON\":\"OFF\"));setIsOn(!isOn);};useEffect(()=>{if(isOn){console.log(\"Button is ON. Setting a random timer to turn it OFF.\");const randomTimeout=Math.floor(Math.random()*5000);// Random time between 0 and 5000 ms\nconsole.log(\"Random timeout set: \".concat(randomTimeout,\"ms\"));const timer=setTimeout(()=>{console.log(\"Random timer triggered. Turning button OFF.\");setIsOn(false);// Turns it off after the random timeout\n},randomTimeout);// Cleanup the timer when the component unmounts or when the button is turned off\nreturn()=>{console.log(\"Cleanup: Clearing timeout.\");clearTimeout(timer);};}else{console.log(\"Button is OFF. No timer is active.\");}},[isOn]);// Re-run the effect only when isOn changes\nreturn/*#__PURE__*/_jsx(\"div\",{style:styles.container,children:/*#__PURE__*/_jsx(\"button\",{onClick:toggleButton,style:_objectSpread(_objectSpread({},styles.button),{},{backgroundColor:isOn?\"green\":\"red\"}),children:isOn?\"ON\":\"OFF\"})});};const styles={container:{display:\"flex\",justifyContent:\"center\",alignItems:\"center\",height:\"100vh\",backgroundColor:\"#f4f4f4\",margin:0},button:{padding:\"20px 40px\",fontSize:\"20px\",color:\"white\",border:\"none\",borderRadius:\"10px\",cursor:\"pointer\"}};export default App;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","App","isOn","setIsOn","toggleButton","console","log","concat","randomTimeout","Math","floor","random","timer","setTimeout","clearTimeout","style","styles","container","children","onClick","_objectSpread","button","backgroundColor","display","justifyContent","alignItems","height","margin","padding","fontSize","color","border","borderRadius","cursor"],"sources":["c:/Users/Evan/Desktop/LearnCode/on-button/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst App = () => {\n  const [isOn, setIsOn] = useState(false);\n\n  // Function to toggle the button's state\n  const toggleButton = () => {\n    console.log(\n      `Button clicked. Toggling state. Current state: ${isOn ? \"ON\" : \"OFF\"}`\n    );\n    setIsOn(!isOn);\n  };\n\n  useEffect(() => {\n    if (isOn) {\n      console.log(\"Button is ON. Setting a random timer to turn it OFF.\");\n\n      const randomTimeout = Math.floor(Math.random() * 5000); // Random time between 0 and 5000 ms\n      console.log(`Random timeout set: ${randomTimeout}ms`);\n\n      const timer = setTimeout(() => {\n        console.log(\"Random timer triggered. Turning button OFF.\");\n        setIsOn(false); // Turns it off after the random timeout\n      }, randomTimeout);\n\n      // Cleanup the timer when the component unmounts or when the button is turned off\n      return () => {\n        console.log(\"Cleanup: Clearing timeout.\");\n        clearTimeout(timer);\n      };\n    } else {\n      console.log(\"Button is OFF. No timer is active.\");\n    }\n  }, [isOn]); // Re-run the effect only when isOn changes\n\n  return (\n    <div style={styles.container}>\n      <button\n        onClick={toggleButton}\n        style={{\n          ...styles.button,\n          backgroundColor: isOn ? \"green\" : \"red\",\n        }}\n      >\n        {isOn ? \"ON\" : \"OFF\"}\n      </button>\n    </div>\n  );\n};\n\nconst styles = {\n  container: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    height: \"100vh\",\n    backgroundColor: \"#f4f4f4\",\n    margin: 0,\n  },\n  button: {\n    padding: \"20px 40px\",\n    fontSize: \"20px\",\n    color: \"white\",\n    border: \"none\",\n    borderRadius: \"10px\",\n    cursor: \"pointer\",\n  },\n};\n\nexport default App;\n"],"mappings":"8HAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEnD,KAAM,CAAAC,GAAG,CAAGA,CAAA,GAAM,CAChB,KAAM,CAACC,IAAI,CAAEC,OAAO,CAAC,CAAGN,QAAQ,CAAC,KAAK,CAAC,CAEvC;AACA,KAAM,CAAAO,YAAY,CAAGA,CAAA,GAAM,CACzBC,OAAO,CAACC,GAAG,mDAAAC,MAAA,CACyCL,IAAI,CAAG,IAAI,CAAG,KAAK,CACvE,CAAC,CACDC,OAAO,CAAC,CAACD,IAAI,CAAC,CAChB,CAAC,CAEDJ,SAAS,CAAC,IAAM,CACd,GAAII,IAAI,CAAE,CACRG,OAAO,CAACC,GAAG,CAAC,sDAAsD,CAAC,CAEnE,KAAM,CAAAE,aAAa,CAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,CAAG,IAAI,CAAC,CAAE;AACxDN,OAAO,CAACC,GAAG,wBAAAC,MAAA,CAAwBC,aAAa,MAAI,CAAC,CAErD,KAAM,CAAAI,KAAK,CAAGC,UAAU,CAAC,IAAM,CAC7BR,OAAO,CAACC,GAAG,CAAC,6CAA6C,CAAC,CAC1DH,OAAO,CAAC,KAAK,CAAC,CAAE;AAClB,CAAC,CAAEK,aAAa,CAAC,CAEjB;AACA,MAAO,IAAM,CACXH,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC,CACzCQ,YAAY,CAACF,KAAK,CAAC,CACrB,CAAC,CACH,CAAC,IAAM,CACLP,OAAO,CAACC,GAAG,CAAC,oCAAoC,CAAC,CACnD,CACF,CAAC,CAAE,CAACJ,IAAI,CAAC,CAAC,CAAE;AAEZ,mBACEF,IAAA,QAAKe,KAAK,CAAEC,MAAM,CAACC,SAAU,CAAAC,QAAA,cAC3BlB,IAAA,WACEmB,OAAO,CAAEf,YAAa,CACtBW,KAAK,CAAAK,aAAA,CAAAA,aAAA,IACAJ,MAAM,CAACK,MAAM,MAChBC,eAAe,CAAEpB,IAAI,CAAG,OAAO,CAAG,KAAK,EACvC,CAAAgB,QAAA,CAEDhB,IAAI,CAAG,IAAI,CAAG,KAAK,CACd,CAAC,CACN,CAAC,CAEV,CAAC,CAED,KAAM,CAAAc,MAAM,CAAG,CACbC,SAAS,CAAE,CACTM,OAAO,CAAE,MAAM,CACfC,cAAc,CAAE,QAAQ,CACxBC,UAAU,CAAE,QAAQ,CACpBC,MAAM,CAAE,OAAO,CACfJ,eAAe,CAAE,SAAS,CAC1BK,MAAM,CAAE,CACV,CAAC,CACDN,MAAM,CAAE,CACNO,OAAO,CAAE,WAAW,CACpBC,QAAQ,CAAE,MAAM,CAChBC,KAAK,CAAE,OAAO,CACdC,MAAM,CAAE,MAAM,CACdC,YAAY,CAAE,MAAM,CACpBC,MAAM,CAAE,SACV,CACF,CAAC,CAED,cAAe,CAAAhC,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}