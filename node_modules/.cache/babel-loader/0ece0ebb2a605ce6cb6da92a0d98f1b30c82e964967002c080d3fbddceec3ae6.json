{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Evan\\\\Desktop\\\\LearnCode\\\\on-button\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [isOn, setIsOn] = useState(false);\n\n  // Function to toggle the button's state\n  const toggleButton = () => {\n    setIsOn(!isOn);\n  };\n  useEffect(() => {\n    // Only start the timer if the button is ON\n    if (isOn) {\n      const randomTimeout = Math.floor(Math.random() * 5000); // Random time between 0 and 5000 ms\n      const timer = setTimeout(() => {\n        setIsOn(false); // Turns it off after the random timeout\n      }, randomTimeout);\n\n      // Cleanup the timer when the component unmounts or when the button is turned off\n      return () => clearTimeout(timer);\n    }\n  }, [isOn]); // Re-run the effect only when isOn changes\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.container,\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleButton,\n      style: {\n        ...styles.button,\n        backgroundColor: isOn ? \"green\" : \"red\"\n      },\n      children: isOn ? \"ON\" : \"OFF\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"8lOBNNx9kKBYVIm9aq2L1dPZgaw=\");\n_c = App;\nconst styles = {\n  container: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    height: \"100vh\",\n    backgroundColor: \"#f4f4f4\",\n    margin: 0\n  },\n  button: {\n    padding: \"20px 40px\",\n    fontSize: \"20px\",\n    color: \"white\",\n    border: \"none\",\n    borderRadius: \"10px\",\n    cursor: \"pointer\"\n  }\n};\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","isOn","setIsOn","toggleButton","randomTimeout","Math","floor","random","timer","setTimeout","clearTimeout","style","styles","container","children","onClick","button","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","_c","display","justifyContent","alignItems","height","margin","padding","fontSize","color","border","borderRadius","cursor","$RefreshReg$"],"sources":["C:/Users/Evan/Desktop/LearnCode/on-button/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst App = () => {\n  const [isOn, setIsOn] = useState(false);\n\n  // Function to toggle the button's state\n  const toggleButton = () => {\n    setIsOn(!isOn);\n  };\n\n  useEffect(() => {\n    // Only start the timer if the button is ON\n    if (isOn) {\n      const randomTimeout = Math.floor(Math.random() * 5000); // Random time between 0 and 5000 ms\n      const timer = setTimeout(() => {\n        setIsOn(false); // Turns it off after the random timeout\n      }, randomTimeout);\n\n      // Cleanup the timer when the component unmounts or when the button is turned off\n      return () => clearTimeout(timer);\n    }\n  }, [isOn]); // Re-run the effect only when isOn changes\n\n  return (\n    <div style={styles.container}>\n      <button\n        onClick={toggleButton}\n        style={{\n          ...styles.button,\n          backgroundColor: isOn ? \"green\" : \"red\",\n        }}\n      >\n        {isOn ? \"ON\" : \"OFF\"}\n      </button>\n    </div>\n  );\n};\n\nconst styles = {\n  container: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    height: \"100vh\",\n    backgroundColor: \"#f4f4f4\",\n    margin: 0,\n  },\n  button: {\n    padding: \"20px 40px\",\n    fontSize: \"20px\",\n    color: \"white\",\n    border: \"none\",\n    borderRadius: \"10px\",\n    cursor: \"pointer\",\n  },\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;;EAEvC;EACA,MAAMQ,YAAY,GAAGA,CAAA,KAAM;IACzBD,OAAO,CAAC,CAACD,IAAI,CAAC;EAChB,CAAC;EAEDL,SAAS,CAAC,MAAM;IACd;IACA,IAAIK,IAAI,EAAE;MACR,MAAMG,aAAa,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;MACxD,MAAMC,KAAK,GAAGC,UAAU,CAAC,MAAM;QAC7BP,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC;MAClB,CAAC,EAAEE,aAAa,CAAC;;MAEjB;MACA,OAAO,MAAMM,YAAY,CAACF,KAAK,CAAC;IAClC;EACF,CAAC,EAAE,CAACP,IAAI,CAAC,CAAC,CAAC,CAAC;;EAEZ,oBACEH,OAAA;IAAKa,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,eAC3BhB,OAAA;MACEiB,OAAO,EAAEZ,YAAa;MACtBQ,KAAK,EAAE;QACL,GAAGC,MAAM,CAACI,MAAM;QAChBC,eAAe,EAAEhB,IAAI,GAAG,OAAO,GAAG;MACpC,CAAE;MAAAa,QAAA,EAEDb,IAAI,GAAG,IAAI,GAAG;IAAK;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACd;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACrB,EAAA,CAlCID,GAAG;AAAAuB,EAAA,GAAHvB,GAAG;AAoCT,MAAMa,MAAM,GAAG;EACbC,SAAS,EAAE;IACTU,OAAO,EAAE,MAAM;IACfC,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE,QAAQ;IACpBC,MAAM,EAAE,OAAO;IACfT,eAAe,EAAE,SAAS;IAC1BU,MAAM,EAAE;EACV,CAAC;EACDX,MAAM,EAAE;IACNY,OAAO,EAAE,WAAW;IACpBC,QAAQ,EAAE,MAAM;IAChBC,KAAK,EAAE,OAAO;IACdC,MAAM,EAAE,MAAM;IACdC,YAAY,EAAE,MAAM;IACpBC,MAAM,EAAE;EACV;AACF,CAAC;AAED,eAAelC,GAAG;AAAC,IAAAuB,EAAA;AAAAY,YAAA,CAAAZ,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}